knitr::opts_chunk$set(echo = TRUE)  #ignore this
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv("./Matrix_Algebra/img.txt", header = FALSE)
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv("./Matrix_Algebra/img.txt", header = FALSE)
getwd()
M = read.csv("./Matrix_Algebra/img.txt", header = FALSE)
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv("./Matrix_Algebra/img.txt", header = FALSE)
M = as.matrix(M)
n = nrow(M)
p = ncol(M)
set.seed(123)
A <- diag(rnorm(p))
set.seed(456)
B <- tcrossprod(as.matrix(array(rnorm(25), c(5,5))))
set.seed(789)
x <- abs(rnorm(p))
set.seed(101)
y <- rnorm(n)
set.seed(112)
H <- as.matrix(array(rnorm(n*p), c(n,p)))
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv("./Matrix_Algebra/img.txt", header = FALSE)
M = as.matrix(M)
n = nrow(M)
p = ncol(M)
set.seed(123)
A <- diag(rnorm(p))
set.seed(456)
B <- tcrossprod(as.matrix(array(rnorm(25), c(5,5))))
set.seed(789)
x <- abs(rnorm(p))
set.seed(101)
y <- rnorm(n)
set.seed(112)
H <- as.matrix(array(rnorm(n*p), c(n,p)))
# Correct step:
M <- M %*% A
# This will perform the calculation, but not update M
# M %*% A
# This will result in an error because the dimensions do not match
#  A %*% M
### DO NOT CHANGE ANYTHING IN THIS CODE CHUNK!!!
M = read.csv("./Matrix_Algebra/img.txt", header = FALSE)
M = as.matrix(M)
n = nrow(M)
p = ncol(M)
set.seed(123)
A <- diag(rnorm(p))
set.seed(456)
B <- tcrossprod(as.matrix(array(rnorm(25), c(5,5))))
set.seed(789)
x <- abs(rnorm(p))
set.seed(101)
y <- rnorm(n)
set.seed(112)
H <- as.matrix(array(rnorm(n*p), c(n,p)))
# Correct step:
M <- M %*% A
M <- t(t(M)*x)
Y <- diag(y)
M <- solve(Y) %*% M
det <- det(B)
M <- M + det
evs <- eigen(B)
M <- M * sum(evs$vectors[,3])
M <- M*t(tcrossprod(x,y))
svd <- svd(H)
M <- M * (100*svd$u)
tr <- sum(svd$d)
M = M/tr
image(M, col = gray((1:100)/100), asp = 1, axes = FALSE)
